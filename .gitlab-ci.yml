variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_AUTH_CONFIG: '{ "auths": { "https://index.docker.io/v1/": { "auth": "$DOCKER_AUTH" } }}'
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  QUANTUM_CLI: registry.internal.planetary-networks.de/quantum-public/cli:2
  QUANTUM_ENDPOINT: tpwd-bb-navi
  QUANTUM_PROJECT: digitransit-ui

stages:
  - build
  - predeploy
  - deploy

services:
  - docker:19.03-dind

.only-on-bbnavi-pushes:
  only:
    refs:
      - bbnavi

build-and-push-docker-img:
  stage: build
  variables:
    TAG: $CI_COMMIT_SHA
    CACHE_TAG: $CI_COMMIT_BRANCH
  before_script:
    - docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    # leverage Docker caching mechanism when building
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#make-docker-in-docker-builds-faster-with-docker-layer-caching
    - docker pull $DOCKER_IMAGE:$CACHE_TAG || true
  script:
    - docker build --cache-from $DOCKER_IMAGE:$CACHE_TAG --tag $DOCKER_IMAGE:$TAG .
    - docker push $DOCKER_IMAGE:$TAG
  after_script:
    # update cache Docker image
    - docker tag $DOCKER_IMAGE:$TAG $DOCKER_IMAGE:$CACHE_TAG
    - docker push $DOCKER_IMAGE:$CACHE_TAG

generate-quantum-config:
  extends:
    - .only-on-bbnavi-pushes
  stage: predeploy
  image:
    name: docker/compose:1.25.5
  cache:
    key: "${CI_PIPELINE_ID}-${QUANTUM_PROJECT}"
    paths: [quantum.yml]
  script:
    - docker-compose -f docker-compose.yml -f stack.yml config > quantum.yml

deploy-using-quantum:
  extends:
    - .only-on-bbnavi-pushes
  stage: deploy
  image: $QUANTUM_CLI
  cache:
    key: "${CI_PIPELINE_ID}-${QUANTUM_PROJECT}"
    paths: [quantum.yml]
  script:
    - quantum-cli stack update --create --stack $QUANTUM_PROJECT-$QUANTUM_ENDPOINT --wait
  tags: [v2]
